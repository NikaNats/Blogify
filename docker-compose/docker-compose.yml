services:
  blogify.api:
    image: blogify/api:${API_VERSION:-latest}
    build:
      context: .
      dockerfile: Blogify.Api/Dockerfile
    depends_on:
      blogify-db:
        condition: service_healthy
      blogify-redis:
        condition: service_healthy
      blogify-idp:
        condition: service_healthy
      blogify-seq:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 5000
      # ASPNETCORE_HTTPS_PORTS: 5001
    ports:
      - "5000:5000"
      # - "5001:5001"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - blogify-network

  blogify-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: blogify
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - blogify-db-data:/var/lib/postgresql/data
    ports:
      - "5454:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - blogify-network

  blogify-idp:
    image: quay.io/keycloak/keycloak:latest
    command:
      - start-dev
      - --import-realm
      - --health-enabled=true
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - blogify-idp-data:/opt/keycloak/data
    ports:
      - "18080:8080"
      - "19000:9000"  # Expose management port for health checks
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 6
      start_period: 30s
    restart: unless-stopped
    networks:
      - blogify-network

  blogify-seq:
    image: datalust/seq:latest
    environment:
      ACCEPT_EULA: Y
    volumes:
      - blogify-seq-data:/data:rw
    ports:
      - "5341:5341"
      - "8082:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5341/api/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - blogify-network

  blogify-redis:
    image: redis:latest
    command: ["redis-server", "--save", "900 1", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - blogify-network

volumes:
  blogify-db-data:
    driver: local
  blogify-redis-data:
    driver: local
  blogify-idp-data:
    driver: local
  blogify-seq-data:
    driver: local

networks:
  internal:
    driver: bridge